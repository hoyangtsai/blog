{"version":3,"file":"component---src-templates-tag-js-76bedd6d2bc84a32d80d.js","mappings":"iJAyDA,UAjDaA,IAAsC,IAADC,EAAA,IAApC,KAAEC,EAAI,SAAEC,EAAQ,YAAEC,GAAaJ,EAC3C,MAAM,IAAEK,GAAQD,GACV,MAAEE,EAAK,WAAEC,GAAeL,EAAKM,kBAC7BC,EAAa,GAAEF,SAAiC,IAAfA,EAAmB,GAAK,oBAAoBF,KAE7EK,GAAkC,QAAtBT,EAAAC,EAAKS,KAAKC,oBAAY,IAAAX,OAAA,EAAtBA,EAAwBY,QAAU,MAEpD,OACEC,EAAAA,cAACC,EAAAA,EAAM,CAACF,MAAOH,EAAWP,SAAUA,GAClCW,EAAAA,cAAA,UAAKL,GACLK,EAAAA,cAAA,UACGR,EAAMU,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAM,KAAEE,GAASD,EAAKE,QAChB,MAAEP,GAAUK,EAAKG,YACvB,OACEP,EAAAA,cAAA,MAAIQ,IAAKH,GACPL,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAIL,GAAON,GACd,KAIXC,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAG,SAAQ,YACV,C","sources":["webpack://Traverse/./src/templates/tag.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nconst Tags = ({ data, location, pageContext }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n\n  const siteTitle = data.site.siteMetadata?.title || `Tag`\n\n  return (\n    <Layout title={siteTitle} location={location}>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`query ($tag: String) {\n  allMarkdownRemark(\n    limit: 2000\n    sort: {frontmatter: {date: DESC}}\n    filter: {frontmatter: {tags: {in: [$tag]}}}\n  ) {\n    totalCount\n    edges {\n      node {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n      }\n    }\n  }\n  site {\n    siteMetadata {\n      title\n    }\n  }\n}`"],"names":["_ref","_data$site$siteMetada","data","location","pageContext","tag","edges","totalCount","allMarkdownRemark","tagHeader","siteTitle","site","siteMetadata","title","React","Layout","map","_ref2","node","slug","fields","frontmatter","key","Link","to"],"sourceRoot":""}