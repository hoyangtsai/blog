{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/javascript-algorithm-quickselect/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Traverse"}},"markdownRemark":{"id":"a0b67ac2-8b17-5568-aef3-864f5a831560","excerpt":"When I saw the article Javascript Algorithms: Quicksort inspires me to write a similar article of quickselect, because quickselect is related to quicksort…","html":"<p>When I saw the article <a href=\"https://wsvincent.com/javascript-algorithms-quicksort/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Javascript Algorithms: Quicksort</a> inspires me to write a similar article of quickselect, because quickselect is related to quicksort sorting algorithm.</p>\n<p>Quicksort was developed by Tony Hoars, thus quickselect is known as Hoare’s selection algorithm.</p>\n<blockquote>\n<p>Quickselect is a selection algorithm to find the kth smallest element in an unordered list</p>\n</blockquote>\n<p>From wikipedia <a href=\"https://en.wikipedia.org/wiki/quickselect\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">definition</a></p>\n<!-- more -->\n<h2 id=\"mechanism\" style=\"position:relative;\"><a href=\"#mechanism\" aria-label=\"mechanism permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mechanism</h2>\n<p>Quickselect summarizes 3 functions</p>\n<ol>\n<li>quickselect</li>\n<li>partition</li>\n<li>swap</li>\n</ol>\n<h3 id=\"quickselect\" style=\"position:relative;\"><a href=\"#quickselect\" aria-label=\"quickselect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quickselect</h3>\n<p>The main body of the algorithm itself.</p>\n<p>It has three factors: <code class=\"language-text\">left</code>, <code class=\"language-text\">right</code> pointers and a <code class=\"language-text\">pivot</code> index.</p>\n<p>A recursion function until the pivot index equals to the kth smallest index.</p>\n<p>The pivot index is generated randomly between the left and right pointers, like this <code class=\"language-text\">pivotIndex = Math.floor(Math.random() * (right - left + 1) + left)</code></p>\n<p>The left pointer starts with 0. If <code class=\"language-text\">kth smallest index > pivotIndex</code>, update <code class=\"language-text\">pivotIndex + 1</code> as the next left argument and the right argument not change.</p>\n<p>Vice versa, the right pointer starts with the <code class=\"language-text\">array length - 1</code>. If <code class=\"language-text\">kth smallest index &lt; pivotIndex</code>, update <code class=\"language-text\">pivotIndex - 1</code> as the next right argument and the left argument not change.</p>\n<p>Otherwise, we found the kth smallest index and return its value.</p>\n<h3 id=\"partition\" style=\"position:relative;\"><a href=\"#partition\" aria-label=\"partition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Partition</h3>\n<p>Inside of the quickselect, the pivot index is updated by partition. Partition is to put the values of the array in order by following steps:</p>\n<ol>\n<li>Swap the pivot index value with the right pointer value</li>\n<li>Assign the left pointer to a store index</li>\n<li>For loop the left pointer until <code class=\"language-text\">left &lt;= right</code>, if <code class=\"language-text\">nums[i] &lt; pivotValue</code> swap the store index value and the loop’s i value, update the store index + 1</li>\n<li>Swap the store index value with the right pointer value (the first greater element larger than the the pivot value)</li>\n</ol>\n<h3 id=\"swap\" style=\"position:relative;\"><a href=\"#swap\" aria-label=\"swap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swap</h3>\n<p>Swap is called very often by partition. Wrap it as an utility function.</p>\n<p>Post-ES6 can be written like this</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"put-it-all-together\" style=\"position:relative;\"><a href=\"#put-it-all-together\" aria-label=\"put it all together permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Put it all together</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">quickselect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> kSmallest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token comment\">// best case for the first input</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">===</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">swap</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">partition</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> pivotIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">const</span> pivotValue <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>pivotIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// 1. move pivotIndex to end</span>\n   <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> pivotIndex<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">let</span> storeIndex <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// 2. move all elements of nums smaller than nums[pivotIndex] to the left</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> l<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pivotValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> storeIndex<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       storeIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n\n   <span class=\"token comment\">// 3. move 1st element larger than nums[pivotIndex] to its right</span>\n   <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> storeIndex<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">return</span> storeIndex<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token keyword\">let</span> pivotIndex <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">-</span> l <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// update position for next pivotIndex</span>\n pivotIndex <span class=\"token operator\">=</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> pivotIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token comment\">// the pivotIndex is on (N - k)th smallest position</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kSmallest <span class=\"token operator\">==</span> pivotIndex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span>kSmallest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// update right, go left side</span>\n <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>kSmallest <span class=\"token operator\">&lt;</span> pivotIndex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">quickselect</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> pivotIndex <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> kSmallest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">// update left, go right side</span>\n <span class=\"token keyword\">return</span> <span class=\"token function\">quickselect</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> pivotIndex <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> kSmallest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>It has O(N) average time complexity, O(N^2) in the worst case.</p>\n<h2 id=\"practice\" style=\"position:relative;\"><a href=\"#practice\" aria-label=\"practice permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Practice</h2>\n<ul>\n<li><a href=\"https://leetcode.com/problems/kth-largest-element-in-an-array/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kth Largest Element in an Array</a></li>\n<li><a href=\"https://leetcode.com/problems/top-k-frequent-elements/description/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Top K Frequent Elements</a></li>\n</ul>","frontmatter":{"title":"Javascript algorithm: Quickselect","date":"January 03, 2022","description":"A method of picking up kth smallest/largest element","tags":["algorithm","javascript"]}},"previous":{"fields":{"slug":"/css-class-naming-mothodology/"},"frontmatter":{"title":"CSS Class 命名方法論"}},"next":null},"pageContext":{"id":"a0b67ac2-8b17-5568-aef3-864f5a831560","previousPostId":"b84b37ac-0665-5d35-8f8e-b5807cf6214d","nextPostId":null}},
    "staticQueryHashes": ["2841359383"]}