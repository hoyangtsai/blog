{"version":3,"file":"component---src-templates-tag-js-79ab40239aff7b079b7d.js","mappings":"kJAyDA,UAjDa,SAAC,GAAqC,IAAD,EAAlCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SACZC,EADwC,EAAlBC,YACtBD,IACR,EAA8BF,EAAKI,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SAAuC,IAAfA,EAAmB,GAAK,KAAhD,iBAAoEJ,EAApE,IAETM,GAAY,UAAAR,EAAKS,KAAKC,oBAAV,eAAwBC,QAAxB,MAElB,OACE,gBAAC,IAAD,CAAQA,MAAOH,EAAWP,SAAUA,GAClC,0BAAKM,GACL,0BACGF,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAH,EAAUE,EAAKG,YAAfL,MACR,OACE,sBAAIM,IAAKH,GACP,gBAAC,EAAAI,KAAD,CAAMC,GAAIL,GAAOH,QAKzB,gBAAC,EAAAO,KAAD,CAAMC,GAAG,SAAT","sources":["webpack://Traverse/./src/templates/tag.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nconst Tags = ({ data, location, pageContext }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n\n  const siteTitle = data.site.siteMetadata?.title || `Tag`\n\n  return (\n    <Layout title={siteTitle} location={location}>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { slug } = node.fields\n          const { title } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`"],"names":["data","location","tag","pageContext","allMarkdownRemark","edges","totalCount","tagHeader","siteTitle","site","siteMetadata","title","map","node","slug","fields","frontmatter","key","Link","to"],"sourceRoot":""}