{"version":3,"file":"component---src-pages-index-js-600d1a1e15c77bf02072.js","mappings":"+KAsDA,MA3CYA,KAAO,IAADC,EAAAC,EAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAA+B,QAAzBJ,EAAGE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBI,OACjCG,EAA+B,QAAzBN,EAAGC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,OAEvC,OACEC,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAACE,EAAAA,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiBC,YAAAC,EAAA,SAEtBf,aAAM,EAANA,EAAQgB,OACPZ,EAAAA,cAAA,WACEA,EAAAA,cAAA,SAAG,oBAAiBA,EAAAA,cAAA,KAAGa,KAAO,wBAAsBd,aAAM,EAANA,EAAQe,UAAY,MAAMlB,EAAOgB,OACrFZ,EAAAA,cAAA,UAAIJ,aAAM,EAANA,EAAQmB,UAAW,OAGvB,E,mBCgBV,MAzDkBC,IAAyB,IAADxB,EAAA,IAAvB,KAAEE,EAAI,SAAEuB,GAAUD,EACnC,MAAME,GAAkC,QAAtB1B,EAAAE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwB2B,QAAU,QAC9CC,EAAQ1B,EAAK2B,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENvB,EAAAA,cAACwB,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjClB,EAAAA,cAACyB,EAAAA,EAAG,CAACN,MAAM,UACXnB,EAAAA,cAACT,EAAG,MACJS,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACwB,EAAAA,EAAM,CAACP,SAAUA,EAAUE,MAAOD,GACjClB,EAAAA,cAACyB,EAAAA,EAAG,CAACN,MAAM,SAEXnB,EAAAA,cAAA,MAAIC,UC7BQ,6BD8BTmB,EAAMM,KAAIC,IACT,MAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE9B,EAAAA,cAAA,MAAIC,UCnCK,+BDmCsB8B,IAAKJ,EAAKE,OAAOC,MAC9C9B,EAAAA,cAAA,WACEgC,WAAS,EACTC,SAAS,6BAETjC,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACkC,EAAAA,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnCpC,EAAAA,cAAA,QAAMoC,SAAS,YAAYjB,KAG/BnB,EAAAA,cAAA,aAAQ2B,EAAKC,YAAYS,OAE3BrC,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEsC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,kBAIZ,KAIJ,C","sources":["webpack://blog/./src/components/bio.js","webpack://blog/./src/pages/index.js","webpack://blog/./src/pages/index.module.css"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <div>\n          <p>Personal blog by <a href={`https://twitter.com/${social?.twitter || ``}`}>{author.name}</a></p>\n          <p>{author?.summary || null}</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nimport * as styles from \"./index.module.css\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"Posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Home\" />\n      {/* <Bio /> */}\n      <ol className={styles.post}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li className={styles.article} key={post.fields.slug}>\n              <article\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`{\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n    nodes {\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n      }\n    }\n  }\n}`\n","// extracted by mini-css-extract-plugin\nexport var article = \"index-module--article--16cc5\";\nexport var post = \"index-module--post--c25f7\";"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","name","href","twitter","summary","_ref","location","siteTitle","title","posts","allMarkdownRemark","nodes","length","Layout","Seo","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}